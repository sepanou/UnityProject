name: Create a release
on: [push]
env:
  VERSION_REGEX: '.*(v.+?\..+?\..+?).*'
jobs:
  check-commit:
    name: Deploy Check
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.group1 }}
    steps:
      - name: Extract version number
        id: version
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.event.head_commit.message }}
          regex: ${{ env.VERSION_REGEX }}
      - name: Stop CI if not release
        if: ${{ steps.version.outputs.match == '' }}
        uses: andymckay/cancel-action@0.2
      - name: Create Release
        if: ${{ steps.version.outputs.match != '' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: ${{ steps.version.outputs.group1 }}
          title: Version ${{ steps.version.outputs.group1 }}
  build-client:
    name: ${{ matrix.platform }} Build
    runs-on: ubuntu-latest
    needs: check-commit
    environment: Release
    strategy:
      matrix:
        platform: [StandaloneWindows, StandaloneWindows64, StandaloneLinux64]
    steps:
      - name: Checkout dev Git branch
        uses: actions/checkout@v2
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-Game-${{ matrix.platform }}
          restore-keys: |
            Library-Game-
            Library-
      - name: Build the game
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.platform }}
      - name: Zip
        uses: papeloto/action-zip@v1
        with:
          files: build/
          dest: Build.zip
      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Build.zip
          asset_name: ${{ matrix.platform }}.zip
          tag: ${{ needs.check-commit.outputs.version }}
  build-server-runtime:
    name: Server Build
    runs-on: ubuntu-latest
    needs: check-commit
    environment: Release
    steps:
      - name: Checkout dev Git branch
        uses: actions/checkout@v2
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-Game-Server
          restore-keys: |
            Library-Game-
            Library-
      - name: Build the game
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          buildMethod: Build.ServerBuild
          targetPlatform: StandaloneLinux64
      - name: Zip
        uses: papeloto/action-zip@v1
        with:
          files: build/
          dest: Build.zip
      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Build.zip
          asset_name: Server.zip
          tag: ${{ needs.check-commit.outputs.version }}
      - name: Upload Dockerfile
        uses: actions/upload-artifact@v2
        with:
          name: server-dockerfile
          path: Assets/Server/Dockerfile
          retention-days: 1
      - name: Upload Server Build
        uses: actions/upload-artifact@v2
        with:
          name: server-build
          path: build/
          retention-days: 1
  build-server-docker:
    name: Build Server Docker Image
    runs-on: ubuntu-latest
    needs: build-server-runtime
    steps:
      - name: Download dockerfile
        uses: actions/download-artifact@v2
        with:
          name: server-dockerfile
      - name: Download server build
        uses: actions/download-artifact@v2
        with:
          name: server-build
          path: build/
      - name: Debug
        run: ls -lsa
      - name: Build and Publish Docker image
        uses: pmorelli92/github-container-registry-build-push@2.0.0
        with:
          github-push-secret: ${{secrets.GITHUB_TOKEN}}
          docker-image-name: unity-server
